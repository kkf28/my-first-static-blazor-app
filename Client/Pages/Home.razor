@page "/"
@inject HttpClient _HttpClient
@attribute [StreamRendering(true)]
@if (Ret is not null)
{
    <table class="table table-sm table-borderless table-striped">
        <thead class="table-warning">
            <tr>
                <th hidden>#</th>
                <th>基金/代码</th>
                <th>T-1溢价率</th>
                <th>实时溢价率</th>
                <th>申购状态</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in Ret.Rows?.Where(x => x.Cell.DiscountRate is not null && x.Cell.DiscountRate != "-" && x.Cell.ApplyStatus != "开放申购") ?? [])
            {
                <tr class="border-bottom pb-0">
                    <td hidden>@Index</td>
                    <td>
                        <p class="m-0 p-0">@row.Cell.FundName</p>
                        <p class="m-0 p-0">@row.Cell.FundID</p>
                    </td>
                    <td>@row.Cell.DiscountRate</td>
                    <td>@row.Cell.DiscountRate2</td>
                    <td>@row.Cell.ApplyStatus</td>
                </tr>
                Index++;
            }
        </tbody>
    </table>
}
else
{
    <p>loading...</p>
}
@code {
    public int Index { get; set; }
    public string? Result { get; set; }
    public QDIIModel? Ret { get; set; }
    protected override async Task OnInitializedAsync()
    {
        // return base.OnInitializedAsync();
        await Get();
    }

    private async Task Get()
    {
        this.Index = 1;
        Ret = null;
        var response = await _HttpClient.GetAsync("/api/QDII");
        Result = await response.Content.ReadAsStringAsync();
        // var obj = await response.Content.ReadFromJsonAsync<dynamic>();
        // var doc=JsonSerializer.SerializeToDocument(Result);
        // Result= JsonSerializer.Serialize(obj, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        if (response.IsSuccessStatusCode)
        {
            // var obj = JsonSerializer.Deserialize<dynamic>(Result, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            Ret = JsonConvert.DeserializeObject<QDIIModel>(Result);
            // var obj = J
            Result = $"success";

        }
        else
        {
            Result = response.ReasonPhrase;
        }
    }
}